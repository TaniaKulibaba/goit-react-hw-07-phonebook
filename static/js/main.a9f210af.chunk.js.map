{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactListItem/ContactListItem.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-reducers.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactSuccess","fetchContactsError","addContactsRequest","addContactSuccess","addContactsError","removeContactsRequest","removeContactSuccess","removeContactsError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","error","contactId","delete","get","INITIAL_STATE","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","props","contacts","find","el","alert","resetForm","onSubmit","className","styles","form","this","label","input","type","pattern","title","placeholder","required","onChange","button","Component","connect","items","contactsOperations","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","_","payload","id","combineReducers","ContactListItem","onClick","item","list","phonebookSelectors","phonebookOperations","length","map","e","filterLabel","App","fetchContacts","isLoadingContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9f210af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3iZOu\",\"label\":\"ContactForm_label__3eSh5\",\"input\":\"ContactForm_input__Nkgkx\",\"button\":\"ContactForm_button__3F7fZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__UIfoM\",\"button\":\"ContactListItem_button__QQCBL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2ip8D\",\"input\":\"Filter_input__3Awmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__13q5y\"};","import { createAction } from '@reduxjs/toolkit';\n\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const removeContactsRequest = createAction('contacts/removeContactsRequest');\nexport const removeContactSuccess = createAction('contacts/removeContactSuccess');\nexport const removeContactsError = createAction('contacts/removeContactsError');\n\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactSuccess,\r\n  addContactsError,\r\n  removeContactsRequest,\r\n  removeContactSuccess,\r\n  removeContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactSuccess,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = ({ name, number });\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nconst removeContact = contactId => dispatch => {\r\n  dispatch(removeContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(removeContactSuccess(contactId)))\r\n    .catch(error => dispatch(removeContactsError(error)));\r\n\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  fetchContacts\r\n};","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport contactsOperations from '../../redux/phonebook/phonebook-operations';\nimport styles from './ContactForm.module.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.props.contacts.find((el) => el.name === this.state.name)) {\n      alert('Contact is already in contacts.');\n      this.resetForm();\n      return;\n    }\n    \n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleFormSubmit}>\n        <label className={styles.label}>Name\n          <input\n            className={styles.input}\n            type='text'\n            name='name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder='Enter name'\n            required\n            value={this.state.name}\n            onChange={this.handleChangeForm}\n          />\n        </label>\n\n        <label className={styles.label}>Number\n          <input            \n            className={styles.input}\n            type='tel'\n            name='number'\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder='Enter phone number'\n            required\n            value={this.state.number}\n            onChange={this.handleChangeForm} />\n        </label>\n        <button className={styles.button} type='submit'>Add contact</button>\n      </form>\n    )\n  }\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { contacts: state.contacts.items };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(normalizedFilter)\r\n        );\r\n    },\r\n);\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getVisibleContacts,\r\n};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactSuccess,\n  addContactsError,\n  removeContactsRequest,\n  removeContactSuccess,\n  removeContactsError,\n  changeFilter\n} from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [removeContactSuccess]: (state, { payload }) => state.filter((el) => el.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactsError]: () => false,\n  [removeContactsRequest]: () => true,\n  [removeContactSuccess]: () => false,\n  [removeContactsError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: () => 'Error! Loading of phonebook is impossible',\n  [addContactsError]: () => 'Adding contact is mistakenly',\n  [removeContactsError]: () => 'Wrong removing',\n});\n\nexport default combineReducers({ items, filter, loading, error });","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.scss';\n\nconst ContactListItem = ({ id, name, number, onClick }) => {\n  return (\n    <li className={styles.item}>{name}: {number}\n      <button className={styles.button} type='button' onClick={() => { onClick(id) }}>\n        Delete\n      </button>\n    </li>\n  )\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ContactListItem;","import { connect } from 'react-redux';\nimport { phonebookOperations, phonebookSelectors } from '../../redux/phonebook';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport styles from './ContactList.module.scss';\n\n\n\nconst ContactList = ({ list, onClick }) => {\n  if (list.length === 0) return null\n  return (\n    <ul className={styles.list}>\n      {list.map((item) => (\n        <ContactListItem key={item.id} id={item.id} name={item.name} number={item.number} onClick ={onClick} />\n      ))}\n    </ul>\n  )\n};\n\nContactList.propTypes = {\n  list: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  list: phonebookSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: (id) => dispatch(phonebookOperations.removeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { phonebookSelectors, changeFilter } from '../../redux/phonebook';\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.filterLabel}>\n      Find contacts by name\n      <input className={styles.input}\n        type='text'\n        name='filter'\n        value={value}\n        onChange={onChange}\n        placeholder='Enter name for Search'\n      />\n    </label>\n  )\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: phonebookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { phonebookOperations, phonebookSelectors } from './redux/phonebook';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {this.props.isLoadingContacts && <h1>Loading...</h1>}\n        <ContactList />\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: phonebookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport { phonebookReducer } from './phonebook';\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n}), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n//const persistor = persistStore(store);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n//import 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/*    <PersistGate loading={null} persistor={store.persistor}> */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    {/*</PersistGate>*/}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}